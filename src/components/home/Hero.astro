<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Styled Slideshow</title>
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: Arial, sans-serif;
      background-color: #000;
    }

    .slideshow-container {
      max-width: 100%;
      position: relative;
      margin: auto;
      overflow: hidden;
    }

    .mySlides {
      position: absolute;
      width: 100%;
      opacity: 0;
      transition: opacity 1.5s cubic-bezier(0.4, 0, 0.2, 1); /* Smooth fade */
    }

    .mySlides img {
      width: 100%;
      vertical-align: middle;
    }

    /* Dark overlay */
    .slide-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.6);
      display: flex;
      align-items: center;
      justify-content: left;
      padding-left: 5%;
    }

    /* Centered content styling */
    .slide-content {
      color: #fff;
      max-width: 300px;
      opacity: 0;
      transform: translateY(20px);
      transition: opacity 0.5s ease, transform 0.5s ease;
    }

    /* Text and Button animations */
    .slide-content.fade-in {
      opacity: 1;
      transform: translateY(0);
    }

    .product-id {
      font-size: 14px;
      letter-spacing: 2px;
      color: #ccc;
      margin-bottom: 10px;
    }

    .product-name {
      font-size: 32px;
      font-weight: bold;
      text-transform: uppercase;
      margin-bottom: 20px;
    }

    .view-all-button {
      padding: 12px 24px;
      font-size: 14px;
      color: #000;
      background-color: #fff;
      border: none;
      cursor: pointer;
      transition: background-color 0.3s;
      text-transform: uppercase;
      opacity: 0;
      transform: translateY(20px);
      transition: opacity 0.5s ease, transform 0.5s ease;
    }

    .view-all-button.fade-in {
      opacity: 1;
      transform: translateY(0);
    }

    .view-all-button:hover {
      background-color: #ccc;
    }

    .active-slide {
      opacity: 1;
      position: relative;
      z-index: 1;
    }
  </style>
</head>
<body>
  <div class="slideshow-container">
    <!-- Slide 1 -->
    <div class="mySlides active-slide">
      <img src="./assets/watches.webp" alt="Image One">
      <div class="slide-overlay">
        <div class="slide-content">
          <div class="product-id">116500LN</div>
          <div class="product-name">Rolex</div>
          <a href="/categories" class="view-all-button">View All</a>
        </div>
      </div>
    </div>

    <!-- Slide 2 -->
    <div class="mySlides">
      <img src="./assets/watches03.webp" alt="Image Two">
      <div class="slide-overlay">
        <div class="slide-content">
          <div class="product-id">7900TI</div>
          <div class="product-name">Audemars Piguet</div>
          <a href="/categories" class="view-all-button">View All</a>
        </div>
      </div>
    </div>

    <!-- Slide 3 -->
    <div class="mySlides">
      <img src="./assets/watches04.webp" alt="Image Three">
      <div class="slide-overlay">
        <div class="slide-content">
          <div class="product-id">5711/1A</div>
          <div class="product-name">Patek Philippe</div>
          <a href="/categories" class="view-all-button">View All</a>
        </div>
      </div>
    </div>
  </div>

  <script>
    let slideIndex = 0;
    let slideInterval;

    // Initialize and start slideshow
    showSlides(slideIndex);
    autoSlides();

    // Auto-slide functionality
    function autoSlides() {
      slideInterval = setInterval(() => {
        slideIndex++;
        showSlides(slideIndex);
      }, 3000); // Change slides every 3 seconds
    }

    // Show the appropriate slide with smooth transition
    function showSlides(n: number): void {
  const slides = document.getElementsByClassName("mySlides") as HTMLCollectionOf<HTMLElement>;

  // Reset slideIndex for infinite loop
  slideIndex = (n >= slides.length) ? 0 : n;
  slideIndex = (n < 0) ? slides.length - 1 : slideIndex;

  // Hide all slides by removing 'active-slide' class
  for (let i = 0; i < slides.length; i++) {
    slides[i].classList.remove("active-slide");

    // Reset animations for text and button
    const content = slides[i].querySelector(".slide-content");
    const button = slides[i].querySelector(".view-all-button");
    if (content && button) {
      content.classList.remove("fade-in");
      button.classList.remove("fade-in");
    }
  }

  // Display the current slide with fade-in effect
  slides[slideIndex].classList.add("active-slide");

  // Special handling to remove flash when moving from last to first slide
  if (slideIndex === 0) {
    slides[slideIndex].style.transition = "none"; // Remove transition for the first slide
    setTimeout(() => {
      slides[slideIndex].style.transition = ""; // Reapply transition after the first show
    }, 100); // Short timeout to re-enable transition
  }

  // Trigger fade-in animation for text and button
  const activeSlide = slides[slideIndex];
  const activeContent = activeSlide.querySelector(".slide-content");
  const activeButton = activeSlide.querySelector(".view-all-button");
  if (activeContent && activeButton) {
    setTimeout(() => {
      activeContent.classList.add("fade-in");
      activeButton.classList.add("fade-in");
    }, 100); // Delay to ensure smooth animation on slide change
  }
}
  </script>
</body>
</html>
