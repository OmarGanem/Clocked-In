<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="stylesheet" href="style.css">
  <title>Responsive Image Slider</title>
</head>
<body>
  <div class="slideshow-container">

    <!-- Slide 1 -->
    <div class="mySlides fade">
      <div class="numbertext">1 / 3</div>
      <img src="./assets/watches.webp" style="width:100%">
      <div class="text">Image One</div>
    </div>

    <!-- Slide 2 -->
    <div class="mySlides fade">
      <div class="numbertext">2 / 3</div>
      <img src="./assets/Watches02.webp" style="width:100%">
      <div class="text">Image Two</div>
    </div>

    <!-- Slide 3 -->
    <div class="mySlides fade">
      <div class="numbertext">3 / 3</div>
      <img src="./assets/watch01.jpg" style="width:100%">
      <div class="text">Image Three</div>
    </div>

  <!-- The dots -->
  <div style="text-align:center">
    <span class="dot" onclick="currentSlide(1)"></span>
    <span class="dot" onclick="currentSlide(2)"></span>
    <span class="dot" onclick="currentSlide(3)"></span>
  </div>

  <script>
    let slideIndex: number = 0;
    let slideInterval: ReturnType<typeof setInterval>; // Type annotation for setInterval ID

    // Show slides when page loads
    showSlides();

    // Auto-slide functionality
    function autoSlides(): void {
      slideInterval = setInterval(() => {
        plusSlides(1);
      }, 3000); // Change slides every 3 seconds
    }

    // Manual slide navigation
    function plusSlides(n: number): void {
      clearInterval(slideInterval); // Clear interval on manual navigation
      showSlides(slideIndex += n);
      autoSlides(); // Restart auto-slide after manual change
    }

    // Dot navigation
    function currentSlide(n: number): void {
      clearInterval(slideInterval); // Clear interval on manual navigation
      showSlides(slideIndex = n - 1);
      autoSlides(); // Restart auto-slide after manual change
    }

    // Show the appropriate slide
    function showSlides(n?: number): void {
      if (typeof n === "undefined") {
        n = slideIndex;
      }

      let i: number;
      let slides = document.getElementsByClassName("mySlides");
      let dots = document.getElementsByClassName("dot");

      if (n >= slides.length) {slideIndex = 0;}
      if (n < 0) {slideIndex = slides.length - 1;}

      for (i = 0; i < slides.length; i++) {
        (slides[i] as HTMLElement).style.display = "none"; // Hide all slides
      }

      for (i = 0; i < dots.length; i++) {
        dots[i].className = dots[i].className.replace(" active", "");
      }

      (slides[slideIndex] as HTMLElement).style.display = "block"; // Show current slide
      dots[slideIndex].className += " active";
    }

    // Start auto-sliding
    autoSlides();
  </script>
</body>
</html>

<style>
* {
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
}

.mySlides {
  display: none;
}

img {
  vertical-align: middle;
}

.slideshow-container {
  max-width: 100%;
  position: relative;
  margin: auto;
}

.text {
  color: #f2f2f2;
  font-size: 15px;
  padding: 8px 12px;
  position: absolute;
  bottom: 8px;
  width: 100%;
  text-align: center;
}

.numbertext {
  color: #f2f2f2;
  font-size: 12px;
  padding: 8px 12px;
  position: absolute;
  top: 0;
}

.dot {
  cursor: pointer;
  height: 15px;
  width: 15px;
  margin: 0 2px;
  background-color: #bbb;
  border-radius: 50%;
  display: inline-block;
  transition: background-color 0.6s ease;
}

.active, .dot:hover {
  background-color: #717171;
}

/* Fading animation */
.fade {
  -webkit-animation-name: fade;
  -webkit-animation-duration: 1.5s;
  animation-name: fade;
  animation-duration: 1.5s;
}

@-webkit-keyframes fade {
  from {opacity: 0.4}
  to {opacity: 1}
}

@keyframes fade {
  from {opacity: 0.4}
  to {opacity: 1}
}

/* Media query for smaller screens */
@media only screen and (max-width: 300px) {
  .prev, .next, .text {font-size: 11px;}
}
</style>